# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python application

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read
  
env:
  DB_KEY: ${{ secrets.DB_KEY }}
  DB_HOST: ${{ secrets.DB_HOST }}
  BLOB_SAS: ${{ secrets.BLOB_SAS }}
  
jobs:
  build:

    runs-on: ubuntu-latest
    permissions:
      contents: read
      issues: read
      checks: write
      pull-requests: write      


    steps:
    - uses: actions/checkout@v4
    - name: Set up Python 3.11
      uses: actions/setup-python@v5
      with:
        python-version: "3.11"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest xmlrunner
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Test with pytest
      env:
        DB_HOST: ${{ secrets.DB_HOST }}
        DB_KEY: ${{ secrets.DB_KEY }}
        PINE_API_KEY: ${{ secrets.PINE_API_KEY }}
        DOCUMENTINTELLIGENCE_KEY: ${{ secrets.DOCUMENTINTELLIGENCE_KEY }}
        DOCUMENTINTELLIGENCE_ENDPOINT: ${{ secrets.DOCUMENTINTELLIGENCE_ENDPOINT }}
        OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        BLOB_SAS: ${{ secrets.BLOB_SAS }}

      run: |
        python -m runner
    - name: my-artifact 
      uses: actions/upload-artifact@v4    
      if: always()
      with:
         path: test-results/   
         retention-days: 5
    - name: Publish Test Results
      uses: EnricoMi/publish-unit-test-result-action@v2 
      id: test-results
      if: always()
      with:
        files: |
            test-results/**/*.xml
            test-results/*.xml
    - name: Conclusion
      run: echo "Conclusion is ${{ fromJSON( steps.test-results.outputs.json ).cases }}"
               
